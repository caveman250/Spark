SSL_VERTEX

setting int numLights;

port(VertexPos) in vec3 inPos;
port(VertexUV) in vec2 inUV;
port(VertexNormal) in vec3 inNormal;

port(FinalVertPos) out vec4 outPos;
port(VertexWorldPos) out vec3 outWorldPos;
port(VertexCameraNormal) out vec3 outNormal;
port(FragUV) out vec2 outUV;
port(CameraEyeDir) out vec3 outEyeDir;
port(CameraLightDir) out vec3[numLights] outLightDir;

uniform mat4 model;
uniform mat4 view;
uniform mat4 proj;
uniform vec3 lightPos[numLights];

void main()
{
    mat4 MVP = proj * view * model;
    outPos = MVP * vec4(inPos, 1.0);

    vec4 worldPos = model * vec4(inPos, 1);
    outWorldPos = worldPos.xyz;

    vec4 vertPosCameraSpace = view * model * vec4(inPos,1);
    outEyeDir = -vertPosCameraSpace.xyz;

    for (int i = 0; i < numLights; i+=1)
    {
        vec4 lightPosCameraSpace = view * vec4(lightPos[i],1);
        outLightDir[i] = lightPosCameraSpace.xyz + outEyeDir;
    }

    vec4 cameraSpaceNormal = view * model * vec4(inNormal, 0);
    outNormal = cameraSpaceNormal.xyz;

    outUV = inUV;
}